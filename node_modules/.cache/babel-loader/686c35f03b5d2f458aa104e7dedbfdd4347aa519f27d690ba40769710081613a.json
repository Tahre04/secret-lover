{"ast":null,"code":"var _jsxFileName = \"/home/zeiny/Documents/secret-lover/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [commits, setCommits] = useState([]);\n  const handleCommit = () => {\n    if (message.trim()) {\n      const newCommit = {\n        hash: Math.random().toString(36).substring(2, 8),\n        message: message,\n        timestamp: new Date().toLocaleString()\n      };\n      setCommits([newCommit, ...commits]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project: I \\u2764\\uFE0F U\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commit-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Write a love commit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCommit,\n          children: \"Commit Love\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commit-log\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Love Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), commits.map(commit => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commit-hash\",\n            children: [\"commit \", commit.hash]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commit-message\",\n            children: commit.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commit-timestamp\",\n            children: [\"Date: \", commit.timestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, commit.hash, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qrJV4/Ii5v7OqBTaGxl0xwBZQf0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","commits","setCommits","handleCommit","trim","newCommit","hash","Math","random","toString","substring","timestamp","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","commit","_c","$RefreshReg$"],"sources":["/home/zeiny/Documents/secret-lover/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [commits, setCommits] = useState([]);\n\n  const handleCommit = () => {\n    if (message.trim()) {\n      const newCommit = {\n        hash: Math.random().toString(36).substring(2, 8),\n        message: message,\n        timestamp: new Date().toLocaleString(),\n      };\n      setCommits([newCommit, ...commits]);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Project: I ❤️ U</h1>\n      </header>\n      <main>\n        <div className=\"commit-area\">\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Write a love commit...\"\n          />\n          <button onClick={handleCommit}>Commit Love</button>\n        </div>\n        <div className=\"commit-log\">\n          <h2>Love Log</h2>\n          {commits.map((commit) => (\n            <div key={commit.hash} className=\"commit\">\n              <p className=\"commit-hash\">commit {commit.hash}</p>\n              <p className=\"commit-message\">{commit.message}</p>\n              <p className=\"commit-timestamp\">Date: {commit.timestamp}</p>\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}